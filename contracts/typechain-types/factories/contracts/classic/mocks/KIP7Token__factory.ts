/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  KIP7Token,
  KIP7TokenInterface,
} from "../../../../contracts/classic/mocks/KIP7Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "intendedDecimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018e9380380620018e983398101604081905262000034916200030f565b8451859085906200004d9060039060208501906200019c565b508051620000639060049060208401906200019c565b50506005805460ff191660ff861617905550620000a9816200008760055460ff1690565b620000979060ff16600a620004d4565b620000a39085620004e9565b620000b4565b505050505062000563565b6001600160a01b0382166200010f5760405162461bcd60e51b815260206004820152601e60248201527f4b4950373a206d696e7420746f20746865207a65726f20616464726573730000604482015260640160405180910390fd5b80600260008282546200012391906200050b565b90915550506001600160a01b03821660009081526020819052604081208054839290620001529084906200050b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001aa9062000526565b90600052602060002090601f016020900481019282620001ce576000855562000219565b82601f10620001e957805160ff191683800117855562000219565b8280016001018555821562000219579182015b8281111562000219578251825591602001919060010190620001fc565b50620002279291506200022b565b5090565b5b808211156200022757600081556001016200022c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026a57600080fd5b81516001600160401b038082111562000287576200028762000242565b604051601f8301601f19908116603f01168101908282118183101715620002b257620002b262000242565b81604052838152602092508683858801011115620002cf57600080fd5b600091505b83821015620002f35785820183015181830184015290820190620002d4565b83821115620003055760008385830101525b9695505050505050565b600080600080600060a086880312156200032857600080fd5b85516001600160401b03808211156200034057600080fd5b6200034e89838a0162000258565b965060208801519150808211156200036557600080fd5b50620003748882890162000258565b945050604086015160ff811681146200038c57600080fd5b6060870151608088015191945092506001600160a01b0381168114620003b157600080fd5b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000416578160001904821115620003fa57620003fa620003bf565b808516156200040857918102915b93841c9390800290620003da565b509250929050565b6000826200042f57506001620004ce565b816200043e57506000620004ce565b8160018114620004575760028114620004625762000482565b6001915050620004ce565b60ff841115620004765762000476620003bf565b50506001821b620004ce565b5060208310610133831016604e8410600b8410161715620004a7575081810a620004ce565b620004b38383620003d5565b8060001904821115620004ca57620004ca620003bf565b0290505b92915050565b6000620004e283836200041e565b9392505050565b6000816000190483118215151615620005065762000506620003bf565b500290565b60008219821115620005215762000521620003bf565b500190565b600181811c908216806200053b57607f821691505b602082108114156200055d57634e487b7160e01b600052602260045260246000fd5b50919050565b61137680620005736000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063423f6cef116100b2578063a457c2d711610081578063b88d4fde11610066578063b88d4fde1461025c578063dd62ed3e1461026f578063eb795549146102b557600080fd5b8063a457c2d714610236578063a9059cbb1461024957600080fd5b8063423f6cef146101d257806342842e0e146101e557806370a08231146101f857806395d89b411461022e57600080fd5b806323b872dd116100ee57806323b872dd14610182578063313ce5671461019557806339509351146101aa57806340c10f19146101bd57600080fd5b806301ffc9a71461012057806306fdde0314610148578063095ea7b31461015d57806318160ddd14610170575b600080fd5b61013361012e366004610f58565b6102c8565b60405190151581526020015b60405180910390f35b6101506103ad565b60405161013f9190610fe7565b61013361016b366004611023565b61043f565b6002545b60405190815260200161013f565b61013361019036600461104d565b610457565b60055460405160ff909116815260200161013f565b6101336101b8366004611023565b61047b565b6101d06101cb366004611023565b6104c7565b005b6101d06101e0366004611023565b6104d5565b6101d06101f336600461104d565b6104fa565b610174610206366004611089565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610150610527565b610133610244366004611023565b610536565b610133610257366004611023565b61060b565b6101d061026a36600461117e565b610619565b61017461027d3660046111e6565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6101d06102c3366004611219565b610638565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f6578737100000000000000000000000000000000000000000000000000000000148061035b57507fffffffff0000000000000000000000000000000000000000000000000000000082167fa219a02500000000000000000000000000000000000000000000000000000000145b806103a757507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600380546103bc90611270565b80601f01602080910402602001604051908101604052809291908181526020018280546103e890611270565b80156104355780601f1061040a57610100808354040283529160200191610435565b820191906000526020600020905b81548152906001019060200180831161041857829003601f168201915b5050505050905090565b60003361044d818585610645565b5060019392505050565b6000336104658582856107f9565b6104708585856108ca565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061044d90829086906104c29087906112c4565b610645565b6104d18282610b7c565b5050565b60003390506104f581848460405180602001604052806000815250610c9c565b505050565b336105068482846107f9565b61052184848460405180602001604052806000815250610c9c565b50505050565b6060600480546103bc90611270565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156105fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f772060448201527f7a65726f0000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104708286868403610645565b60003361044d8185856108ca565b336106258582856107f9565b61063185858585610c9c565b5050505050565b3361052181858585610c9c565b73ffffffffffffffffffffffffffffffffffffffff83166106e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4b4950373a20617070726f76652066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105f5565b73ffffffffffffffffffffffffffffffffffffffff821661078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4b4950373a20617070726f766520746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016105f5565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461052157818110156108bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4b4950373a20696e73756666696369656e7420616c6c6f77616e63650000000060448201526064016105f5565b6105218484848403610645565b73ffffffffffffffffffffffffffffffffffffffff831661096c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4b4950373a207472616e736665722066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105f5565b73ffffffffffffffffffffffffffffffffffffffff8216610a0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4b4950373a207472616e7366657220746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105f5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610ac5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4b4950373a207472616e7366657220616d6f756e74206578636565647320626160448201527f6c616e636500000000000000000000000000000000000000000000000000000060648201526084016105f5565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610b099084906112c4565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b6f91815260200190565b60405180910390a3610521565b73ffffffffffffffffffffffffffffffffffffffff8216610bf9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4b4950373a206d696e7420746f20746865207a65726f2061646472657373000060448201526064016105f5565b8060026000828254610c0b91906112c4565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610c459084906112c4565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b610ca78484846108ca565b610cb384848484610d3f565b610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4b4950373a207472616e7366657220746f206e6f6e20494b495037526563656960448201527f76657220696d706c656d656e746572000000000000000000000000000000000060648201526084016105f5565b600073ffffffffffffffffffffffffffffffffffffffff84163b15610470576040517f9d188c2200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851690639d188c2290610db6903390899088908890600401611303565b6020604051808303816000875af1925050508015610e0f575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610e0c9181019061134c565b60015b610ed9573d808015610e3d576040519150601f19603f3d011682016040523d82523d6000602084013e610e42565b606091505b508051610ed1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4b4950373a207472616e7366657220746f206e6f6e204b49503752656365697660448201527f657220696d706c656d656e74657200000000000000000000000000000000000060648201526084016105f5565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f9d188c2200000000000000000000000000000000000000000000000000000000149050949350505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610f5557600080fd5b50565b600060208284031215610f6a57600080fd5b8135610f7581610f27565b9392505050565b6000815180845260005b81811015610fa257602081850181015186830182015201610f86565b81811115610fb4576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610f756020830184610f7c565b803573ffffffffffffffffffffffffffffffffffffffff8116811461101e57600080fd5b919050565b6000806040838503121561103657600080fd5b61103f83610ffa565b946020939093013593505050565b60008060006060848603121561106257600080fd5b61106b84610ffa565b925061107960208501610ffa565b9150604084013590509250925092565b60006020828403121561109b57600080fd5b610f7582610ffa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126110e457600080fd5b813567ffffffffffffffff808211156110ff576110ff6110a4565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611145576111456110a4565b8160405283815286602085880101111561115e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561119457600080fd5b61119d85610ffa565b93506111ab60208601610ffa565b925060408501359150606085013567ffffffffffffffff8111156111ce57600080fd5b6111da878288016110d3565b91505092959194509250565b600080604083850312156111f957600080fd5b61120283610ffa565b915061121060208401610ffa565b90509250929050565b60008060006060848603121561122e57600080fd5b61123784610ffa565b925060208401359150604084013567ffffffffffffffff81111561125a57600080fd5b611266868287016110d3565b9150509250925092565b600181811c9082168061128457607f821691505b602082108114156112be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082198211156112fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526113426080830184610f7c565b9695505050505050565b60006020828403121561135e57600080fd5b8151610f7581610f2756fea164736f6c634300080a000a";

type KIP7TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KIP7TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KIP7Token__factory extends ContractFactory {
  constructor(...args: KIP7TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    intendedDecimals: PromiseOrValue<BigNumberish>,
    initialSupply: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KIP7Token> {
    return super.deploy(
      name,
      symbol,
      intendedDecimals,
      initialSupply,
      owner,
      overrides || {}
    ) as Promise<KIP7Token>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    intendedDecimals: PromiseOrValue<BigNumberish>,
    initialSupply: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      intendedDecimals,
      initialSupply,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): KIP7Token {
    return super.attach(address) as KIP7Token;
  }
  override connect(signer: Signer): KIP7Token__factory {
    return super.connect(signer) as KIP7Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KIP7TokenInterface {
    return new utils.Interface(_abi) as KIP7TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KIP7Token {
    return new Contract(address, _abi, signerOrProvider) as KIP7Token;
  }
}
