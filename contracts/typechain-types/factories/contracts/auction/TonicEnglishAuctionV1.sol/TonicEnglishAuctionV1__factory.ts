/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TonicEnglishAuctionV1,
  TonicEnglishAuctionV1Interface,
} from "../../../../contracts/auction/TonicEnglishAuctionV1.sol/TonicEnglishAuctionV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct TonicEnglishAuctionV1.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "NewBid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumIncrease",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewardToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "burnOrRetrieve",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "feeNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeDenominator",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TonicEnglishAuctionV1.Round",
        name: "round",
        type: "tuple",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumIncrease",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "burnOrRetrieve",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feeNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeDenominator",
        type: "uint256",
      },
    ],
    name: "createRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRoundId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "endRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getBidsInRange",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
        ],
        internalType: "struct TonicEnglishAuctionV1.Bid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "hasUserSubmittedBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "highestBids",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tonicAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUserRefundClaimable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onKIP7Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "refunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roundBids",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumIncrease",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "burnOrRetrieve",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "feeNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeDenominator",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tonic",
    outputs: [
      {
        internalType: "contract IERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051612e1561004c6000396000818161088b0152818161094001528181610c8701528181610d370152610e800152612e156000f3fe60806040526004361061019a5760003560e01c8063598647f8116100e1578063715018a61161008a5780639cbe5efd116100645780639cbe5efd146106305780639d188c2214610646578063afacec09146106bb578063f2fde38b146106db57600080fd5b8063715018a6146105255780638c65c81f1461053a5780638da5cb5b1461060557600080fd5b80635b7baf64116100bb5780635b7baf64146104b857806361d027b3146104d85780636605bfda1461050557600080fd5b8063598647f8146104585780635a1e6ca1146104785780635a43bbaf1461049857600080fd5b8063449e88121161014357806352d1902d1161011d57806352d1902d146103a5578063546b0f23146103ba57806354fd4d501461040c57600080fd5b8063449e881214610337578063485cc955146103725780634f1ef2861461039257600080fd5b806326b4c9ee1161017457806326b4c9ee146102af5780633436247b146102cf5780633659cfe61461031557600080fd5b80630be08298146101a6578063111cb2581461020e5780631a4c6d7b1461028257600080fd5b366101a157005b600080fd5b3480156101b257600080fd5b506101f96101c1366004612860565b600091825260cd6020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b60405190151581526020015b60405180910390f35b34801561021a57600080fd5b5061025861022936600461288c565b60cc602052600090815260409020805460019091015473ffffffffffffffffffffffffffffffffffffffff1682565b6040805192835273ffffffffffffffffffffffffffffffffffffffff909116602083015201610205565b34801561028e57600080fd5b506102a261029d3660046128a5565b6106fb565b60405161020591906128d1565b3480156102bb57600080fd5b506102586102ca366004612936565b610821565b3480156102db57600080fd5b506103076102ea366004612958565b60d060209081526000928352604080842090915290825290205481565b604051908152602001610205565b34801561032157600080fd5b50610335610330366004612982565b610873565b005b34801561034357600080fd5b506101f9610352366004612860565b60cd60209081526000928352604080842090915290825290205460ff1681565b34801561037e57600080fd5b5061033561038d36600461299d565b610a7e565b6103356103a0366004612aa1565b610c6f565b3480156103b157600080fd5b50610307610e66565b3480156103c657600080fd5b5060c9546103e79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610205565b34801561041857600080fd5b50604080518082018252600581527f312e302e30000000000000000000000000000000000000000000000000000000602082015290516102059190612b1b565b34801561046457600080fd5b50610335610473366004612936565b610f52565b34801561048457600080fd5b5061033561049336600461288c565b6114d3565b3480156104a457600080fd5b506103356104b3366004612b7a565b6118c4565b3480156104c457600080fd5b506103356104d336600461288c565b611c3c565b3480156104e457600080fd5b5060ca546103e79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561051157600080fd5b50610335610520366004612982565b611ee2565b34801561053157600080fd5b50610335611f31565b34801561054657600080fd5b506105b361055536600461288c565b60cb602052600090815260409020805460018201546002830154600384015460048501546005860154600687015460079097015495969495939473ffffffffffffffffffffffffffffffffffffffff90931693919260ff9091169188565b6040805198895260208901979097529587019490945273ffffffffffffffffffffffffffffffffffffffff90921660608601526080850152151560a084015260c083015260e082015261010001610205565b34801561061157600080fd5b5060975473ffffffffffffffffffffffffffffffffffffffff166103e7565b34801561063c57600080fd5b5061030760cf5481565b34801561065257600080fd5b5061068a610661366004612be9565b7f9d188c2200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610205565b3480156106c757600080fd5b506101f96106d6366004612860565b611f45565b3480156106e757600080fd5b506103356106f6366004612982565b611f95565b606060006107098484612c80565b610714906001612c97565b67ffffffffffffffff81111561072c5761072c6129c7565b60405190808252806020026020018201604052801561077157816020015b604080518082019091526000808252602082015281526020019060019003908161074a5790505b509050835b83811161081657600086815260ce6020526040902080548290811061079d5761079d612caf565b600091825260209182902060408051808201909152600290920201805482526001015473ffffffffffffffffffffffffffffffffffffffff1691810191909152826107e88784612c80565b815181106107f8576107f8612caf565b6020026020010181905250808061080e90612cde565b915050610776565b5090505b9392505050565b60ce602052816000526040600020818154811061083d57600080fd5b60009182526020909120600290910201805460019091015490925073ffffffffffffffffffffffffffffffffffffffff16905082565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016141561093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109b37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610935565b610a5f81612049565b60408051600080825260208201909252610a7b91839190612051565b50565b600054610100900460ff1615808015610a9e5750600054600160ff909116105b80610ab85750303b158015610ab8575060005460ff166001145b610b44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610935565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ba257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610baa612250565b610bb26122ef565b60c9805473ffffffffffffffffffffffffffffffffffffffff8086167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560ca8054928516929091169190911790558015610c6a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b3073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161415610d35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610935565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610daa7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610e4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610935565b610e5682612049565b610e6282826001612051565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610935565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b600082815260cb6020526040902054431015610fca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f526f756e64206e6f7420737461727465640000000000000000000000000000006044820152606401610935565b600082815260cb6020526040902060010154431115611045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f526f756e6420656e6465640000000000000000000000000000000000000000006044820152606401610935565b600082815260cc602052604090205481116110bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f416d6f756e7420746f6f206c6f770000000000000000000000000000000000006044820152606401610935565b600082815260cb602090815260408083206002015460cc909252909120546110e49190612c97565b81101561114d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f416d6f756e74206e6f74206869676820656e6f756768000000000000000000006044820152606401610935565b600082815260cb6020526040812060078101546006909101546111709084612d17565b61117a9190612d54565b60c9546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810185905291925073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156111f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121c9190612d8f565b50600083815260cb602052604090206005015460ff16156112c05760c9546040517f42966c680000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff909116906342966c6890602401600060405180830381600087803b1580156112a357600080fd5b505af11580156112b7573d6000803e3d6000fd5b50505050611361565b60c95460ca546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561133b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135f9190612d8f565b505b600061136d8284612c80565b60408051808201825282815233602080830182815260008a815260cc808452868220955186559151600180870180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff94851617825560cd8752898520888652875289852080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016841790558e855260ce87528985208a51808c018c528c8152808901998a528154808601835591875288872090516002909202019081559751979092018054909216968316969096179055908b905290825284519354845291549091169082015291925085917fce4060c3e44fcde185b8be00a573e7253c19a432b0dfdf2ffcfeea5f538feba9910160405180910390a233600090815260d060209081526040808320878452909152812080548392906114c8908490612c97565b909155505050505050565b600081815260cb6020526040902060010154431161154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526f756e64206e6f7420656e64656420796574000000000000000000000000006044820152606401610935565b600081815260cc602090815260408083206001015473ffffffffffffffffffffffffffffffffffffffff16835260d08252808320848452825280832083905560cb90915290206005015460ff161561163e5760c954600082815260cc6020526040908190205490517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916342966c68916116079160040190815260200190565b600060405180830381600087803b15801561162157600080fd5b505af1158015611635573d6000803e3d6000fd5b505050506116f0565b60c95460ca54600083815260cc6020526040908190205490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156116ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ee9190612d8f565b505b600081815260cb602052604090206003015473ffffffffffffffffffffffffffffffffffffffff1661180057600081815260cc602090815260408083206001015460cb90925280832060040154905173ffffffffffffffffffffffffffffffffffffffff909216918381818185875af1925050503d8060008114611790576040519150601f19603f3d011682016040523d82523d6000602084013e611795565b606091505b5050905080610e62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610935565b600081815260cb60208181526040808420600381015460cc845294829020600101549390925260049182015490517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af11580156118a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e629190612d8f565b6118cc612386565b60cf5415806118fe575060cb6000600160cf546118e99190612c80565b81526020019081526020016000206001015443115b611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f50726576696f757320726f756e64206e6f7420656e64656420796574000000006044820152606401610935565b73ffffffffffffffffffffffffffffffffffffffff85161580611a1557506040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152849073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156119ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a129190612dac565b10155b611a7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e73756666696369656e742066756e647320666f72207265776172640000006044820152606401610935565b604080516101008101825289815260208082018a81528284018a815273ffffffffffffffffffffffffffffffffffffffff808b1660608601908152608086018b81528a151560a0880190815260c088018b815260e089018b815260cf8054600090815260cb909a52988b90208a51815597516001890155955160028801559251600387018054919095167fffffffffffffffffffffffff00000000000000000000000000000000000000009091161790935551600485015590516005840180549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909216919091179055516006830155516007909101555491519091907f7f89c45053d8e35aac7e65d771b9b9b06dca5fa68c2c2fd4d01aeb366525b7ff90611c1490849060006101008201905082518252602083015160208301526040830151604083015273ffffffffffffffffffffffffffffffffffffffff60608401511660608301526080830151608083015260a0830151151560a083015260c083015160c083015260e083015160e083015292915050565b60405180910390a260cf8054906000611c2c83612cde565b9190505550505050505050505050565b600081815260cb60205260409020600101544311611cb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526f756e64206e6f7420656e64656420796574000000000000000000000000006044820152606401610935565b600081815260cc602052604090206001015473ffffffffffffffffffffffffffffffffffffffff16331415611d6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f48696768657374206269646465722063616e277420636c61696d20612072656660448201527f756e6400000000000000000000000000000000000000000000000000000000006064820152608401610935565b33600090815260d06020908152604080832084845290915290205480611def576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f7468696e6720746f20726566756e640000000000000000000000000000006044820152606401610935565b33600081815260d0602090815260408083208684529091528082209190915560c95490517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101929092526024820183905273ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015611e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea89190612d8f565b5060405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a25050565b611eea612386565b60ca80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611f39612386565b611f436000612407565b565b600082815260cb60205260408120600101544311801561081a57505073ffffffffffffffffffffffffffffffffffffffff16600090815260d0602090815260408083209383529290522054151590565b611f9d612386565b73ffffffffffffffffffffffffffffffffffffffff8116612040576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610935565b610a7b81612407565b610a7b612386565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561208457610c6a8361247e565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612109575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261210691810190612dac565b60015b612195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610935565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610935565b50610c6a838383612588565b600054610100900460ff166122e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610935565b611f436125b3565b600054610100900460ff16611f43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610935565b60975473ffffffffffffffffffffffffffffffffffffffff163314611f43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610935565b6097805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff81163b612522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610935565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61259183612653565b60008251118061259e5750805b15610c6a576125ad83836126a0565b50505050565b600054610100900460ff1661264a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610935565b611f4333612407565b61265c8161247e565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b612746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610935565b6000808473ffffffffffffffffffffffffffffffffffffffff168460405161276e9190612dc5565b600060405180830381855af49150503d80600081146127a9576040519150601f19603f3d011682016040523d82523d6000602084013e6127ae565b606091505b50915091506127d68282604051806060016040528060278152602001612de2602791396127df565b95945050505050565b606083156127ee57508161081a565b61081a83838151156128035781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109359190612b1b565b803573ffffffffffffffffffffffffffffffffffffffff8116811461285b57600080fd5b919050565b6000806040838503121561287357600080fd5b8235915061288360208401612837565b90509250929050565b60006020828403121561289e57600080fd5b5035919050565b6000806000606084860312156128ba57600080fd5b505081359360208301359350604090920135919050565b602080825282518282018190526000919060409081850190868401855b828110156129295781518051855286015173ffffffffffffffffffffffffffffffffffffffff168685015292840192908501906001016128ee565b5091979650505050505050565b6000806040838503121561294957600080fd5b50508035926020909101359150565b6000806040838503121561296b57600080fd5b61297483612837565b946020939093013593505050565b60006020828403121561299457600080fd5b61081a82612837565b600080604083850312156129b057600080fd5b6129b983612837565b915061288360208401612837565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112612a0757600080fd5b813567ffffffffffffffff80821115612a2257612a226129c7565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612a6857612a686129c7565b81604052838152866020858801011115612a8157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215612ab457600080fd5b612abd83612837565b9150602083013567ffffffffffffffff811115612ad957600080fd5b612ae5858286016129f6565b9150509250929050565b60005b83811015612b0a578181015183820152602001612af2565b838111156125ad5750506000910152565b6020815260008251806020840152612b3a816040850160208701612aef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8015158114610a7b57600080fd5b600080600080600080600080610100898b031215612b9757600080fd5b883597506020890135965060408901359550612bb560608a01612837565b94506080890135935060a0890135612bcc81612b6c565b979a969950949793969295929450505060c08201359160e0013590565b60008060008060808587031215612bff57600080fd5b612c0885612837565b9350612c1660208601612837565b925060408501359150606085013567ffffffffffffffff811115612c3957600080fd5b612c45878288016129f6565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015612c9257612c92612c51565b500390565b60008219821115612caa57612caa612c51565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612d1057612d10612c51565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612d4f57612d4f612c51565b500290565b600082612d8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215612da157600080fd5b815161081a81612b6c565b600060208284031215612dbe57600080fd5b5051919050565b60008251612dd7818460208701612aef565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080a000a";

type TonicEnglishAuctionV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TonicEnglishAuctionV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TonicEnglishAuctionV1__factory extends ContractFactory {
  constructor(...args: TonicEnglishAuctionV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TonicEnglishAuctionV1> {
    return super.deploy(overrides || {}) as Promise<TonicEnglishAuctionV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TonicEnglishAuctionV1 {
    return super.attach(address) as TonicEnglishAuctionV1;
  }
  override connect(signer: Signer): TonicEnglishAuctionV1__factory {
    return super.connect(signer) as TonicEnglishAuctionV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TonicEnglishAuctionV1Interface {
    return new utils.Interface(_abi) as TonicEnglishAuctionV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TonicEnglishAuctionV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TonicEnglishAuctionV1;
  }
}
