/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FraxPayCore,
  FraxPayCoreInterface,
} from "../../../contracts/FraxPayCore.sol/FraxPayCore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeDenominator",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transferAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "ERC20Payment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transferAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "NativePayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transferAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct FraxPayCore.RecipientAndAmount[]",
        name: "splitData",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "SplitERC20Payment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transferAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct FraxPayCore.RecipientAndAmount[]",
        name: "splitData",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "SplitNativePayment",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "erc20Payment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "nativePayment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct FraxPayCore.RecipientAndAmount[]",
        name: "splitData",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "splitERC20Payment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct FraxPayCore.RecipientAndAmount[]",
        name: "splitData",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "identifier",
        type: "string",
      },
    ],
    name: "splitNativePayment",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161129738038061129783398101604081905261002f9161005b565b600080546001600160a01b0319166001600160a01b03949094169390931790925560015560025561009e565b60008060006060848603121561007057600080fd5b83516001600160a01b038116811461008757600080fd5b602085015160409095015190969495509392505050565b6111ea806100ad6000396000f3fe60806040526004361061003f5760003560e01c80631ad2fb4f146100445780632c782ec91461005957806365a3d8b214610079578063aef78daf1461008c575b600080fd5b610057610052366004610dc0565b6100ac565b005b34801561006557600080fd5b50610057610074366004610e3e565b61035b565b610057610087366004610ecd565b610752565b34801561009857600080fd5b506100576100a7366004610f24565b6108dc565b8234101561011b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f467261785061793a20496e73756666696369656e74204554482073656e74000060448201526064015b60405180910390fd5b60006002546001548561012e9190610faf565b6101389190610fec565b905060006101468286611027565b90508060005b85518110156102a1576000878388848151811061016b5761016b61103e565b6020026020010151602001516101819190610faf565b61018b9190610fec565b90508084101561021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f467261785061793a20496e73756666696369656e7420616d6f756e7420746f2060448201527f73706c69740000000000000000000000000000000000000000000000000000006064820152608401610112565b86828151811061022f5761022f61103e565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610280573d6000803e3d6000fd5b5061028b8185611027565b93505080806102999061106d565b91505061014c565b506000805460405173ffffffffffffffffffffffffffffffffffffffff9091169185156108fc02918691818181858888f193505050501580156102e8573d6000803e3d6000fd5b508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f820dc2064dde865d9867442c7fcfcaec7214a45affe122d884834e5e107c824488888860405161034a93929190611111565b60405180910390a350505050505050565b60025460015485916000916103709087610faf565b61037a9190610fec565b905060006103888287611027565b90508060005b86518110156105bd57600088838984815181106103ad576103ad61103e565b6020026020010151602001516103c39190610faf565b6103cd9190610fec565b90508084101561045f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f467261785061793a20496e73756666696369656e7420616d6f756e7420746f2060448201527f73706c69740000000000000000000000000000000000000000000000000000006064820152608401610112565b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd338a858151811061048e5761048e61103e565b6020908102919091010151516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff928316600482015291166024820152604481018490526064016020604051808303816000875af1158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190611193565b61059d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f467261785061793a205472616e73666572206661696c656400000000000000006044820152606401610112565b6105a78185611027565b93505080806105b59061106d565b91505061038e565b506000546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff918216602482015260448101859052908516906323b872dd906064016020604051808303816000875af115801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190611193565b6106c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f467261785061793a205472616e73666572206661696c656400000000000000006044820152606401610112565b8773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2adb94eb5b3369da1033321a1d0a443f9c5eace7fae50f9ac044234a676232058a8a8a60405161073f93929190611111565b60405180910390a4505050505050505050565b813410156107bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f467261785061793a20496e73756666696369656e74204554482073656e7400006044820152606401610112565b6000600254600154846107cf9190610faf565b6107d99190610fec565b905073ffffffffffffffffffffffffffffffffffffffff84166108fc6107ff8386611027565b6040518115909202916000818181858888f19350505050158015610827573d6000803e3d6000fd5b506000805460405173ffffffffffffffffffffffffffffffffffffffff9091169183156108fc02918491818181858888f1935050505015801561086e573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3bf6ca55ec302e9f84f89046d9f14168c85be8fa73f190d309067caaa583015385856040516108ce9291906111bc565b60405180910390a350505050565b60025460015484916000916108f19086610faf565b6108fb9190610fec565b905073ffffffffffffffffffffffffffffffffffffffff82166323b872dd33886109258589611027565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af115801561099e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c29190611193565b610a28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f467261785061793a205472616e73666572206661696c656400000000000000006044820152606401610112565b6000546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff918216602482015260448101839052908316906323b872dd906064016020604051808303816000875af1158015610aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acb9190611193565b610b31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f467261785061793a205472616e73666572206661696c656400000000000000006044820152606401610112565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa781686687407c42158371a34aa15e2ea2bb4bdde77c8f4f2f9f6b3c297f5fad8787604051610ba79291906111bc565b60405180910390a4505050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bdb57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c3257610c32610be0565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c7f57610c7f610be0565b604052919050565b600082601f830112610c9857600080fd5b8135602067ffffffffffffffff821115610cb457610cb4610be0565b610cc2818360051b01610c38565b82815260069290921b84018101918181019086841115610ce157600080fd5b8286015b84811015610d275760408189031215610cfe5760008081fd5b610d06610c0f565b610d0f82610bb7565b81528185013585820152835291830191604001610ce5565b509695505050505050565b600082601f830112610d4357600080fd5b813567ffffffffffffffff811115610d5d57610d5d610be0565b610d8e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610c38565b818152846020838601011115610da357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610dd657600080fd5b610ddf85610bb7565b935060208501359250604085013567ffffffffffffffff80821115610e0357600080fd5b610e0f88838901610c87565b93506060870135915080821115610e2557600080fd5b50610e3287828801610d32565b91505092959194509250565b600080600080600060a08688031215610e5657600080fd5b610e5f86610bb7565b9450610e6d60208701610bb7565b935060408601359250606086013567ffffffffffffffff80821115610e9157600080fd5b610e9d89838a01610c87565b93506080880135915080821115610eb357600080fd5b50610ec088828901610d32565b9150509295509295909350565b600080600060608486031215610ee257600080fd5b610eeb84610bb7565b925060208401359150604084013567ffffffffffffffff811115610f0e57600080fd5b610f1a86828701610d32565b9150509250925092565b60008060008060808587031215610f3a57600080fd5b610f4385610bb7565b9350610f5160208601610bb7565b925060408501359150606085013567ffffffffffffffff811115610f7457600080fd5b610e3287828801610d32565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fe757610fe7610f80565b500290565b600082611022577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008282101561103957611039610f80565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561109f5761109f610f80565b5060010190565b6000815180845260005b818110156110cc576020818501810151868301820152016110b0565b818111156110de576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000606082018583526020606081850152818651808452608086019150828801935060005b81811015611173578451805173ffffffffffffffffffffffffffffffffffffffff1684528401518484015293830193604090920191600101611136565b5050848103604086015261118781876110a6565b98975050505050505050565b6000602082840312156111a557600080fd5b815180151581146111b557600080fd5b9392505050565b8281526040602082015260006111d560408301846110a6565b94935050505056fea164736f6c634300080a000a";

type FraxPayCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FraxPayCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FraxPayCore__factory extends ContractFactory {
  constructor(...args: FraxPayCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    _feeNumerator: BigNumberish,
    _feeDenominator: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeRecipient,
      _feeNumerator,
      _feeDenominator,
      overrides || {}
    );
  }
  override deploy(
    _feeRecipient: AddressLike,
    _feeNumerator: BigNumberish,
    _feeDenominator: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeRecipient,
      _feeNumerator,
      _feeDenominator,
      overrides || {}
    ) as Promise<
      FraxPayCore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FraxPayCore__factory {
    return super.connect(runner) as FraxPayCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FraxPayCoreInterface {
    return new Interface(_abi) as FraxPayCoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FraxPayCore {
    return new Contract(address, _abi, runner) as unknown as FraxPayCore;
  }
}
